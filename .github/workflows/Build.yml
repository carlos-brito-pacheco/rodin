name: Build
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

concurrency:
  group: Build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        compiler: [gcc-8, clang-7]
        build_type: ['Release', 'Debug']
      fail-fast: false
    env:
      MAKEFLAGS: "-j2"
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: >-
          sudo apt-get update && sudo apt-get install -y
          libgl1-mesa-dev
          lcov
          libsdl2-dev
          libglfw3-dev
          libopenal-dev
          libvulkan-dev
          libsuitesparse-dev
          libmetis-dev
          libboost-all-dev
      - name: Configure CMake
        run: >
          cmake
          -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DRODIN_BUILD_DOC=OFF
          -DRODIN_USE_MCSS=OFF
          -DRODIN_BUILD_SRC=ON
          -DRODIN_BUILD_EXAMPLES=ON
      - name: Build
        run: cmake --build ${{github.workspace}}/build
  MacOS:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, macos-12]
        build_type: ['Release', 'Debug']
      fail-fast: false
    env:
      MAKEFLAGS: "-j2"
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: actions/setup-python#577
        run: |
          brew list -1 | grep python | while read formula; do brew unlink $formula; brew link --overwrite $formula; done
      - name: Install dependencies
        run: >-
          brew update  && brew install
          mesalib-glw
          lcov
          sdl2
          glfw
          openal-soft
          vulkan-headers
          molten-vk
          suitesparse
          boost
      - name: Configure CMake
        run: >
          cmake
          -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DRODIN_BUILD_DOC=OFF
          -DRODIN_USE_MCSS=OFF
          -DRODIN_BUILD_SRC=ON
          -DRODIN_BUILD_EXAMPLES=ON
      - name: Build
        run: cmake --build ${{github.workspace}}/build


