/*
 *          Copyright Carlos BRITO PACHECO 2021 - 2023.
 * Distributed under the Boost Software License, Version 1.0.
 *       (See accompanying file LICENSE or copy at
 *          https://www.boost.org/LICENSE_1_0.txt)
 */
#ifndef RODIN_CONFIGURE_H
#define RODIN_CONFIGURE_H

/**
 * @file
 * @brief Header containing preprocessor directives for Rodin.
 */

/**
 * @defgroup RodinDirectives Preprocessor directives
 * @brief Preprocessor directives defined by Rodin.
 */

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with Python support.
 *
 * # Utilization
 *
 * @code{cpp}
 *  #ifndef RODIN_WITH_PY
 *  // Code depending on Python support
 *  #endif
 * @endcode
 */
#cmakedefine RODIN_WITH_PY

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin::Plot is built.
 * @code{cpp}
 *  #ifndef RODIN_WITH_PLOT
 *  // Code depending on Rodin::Plot support
 *  #endif
 * @endcode
 */
#cmakedefine RODIN_WITH_PLOT

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with MPI support.
 *
 * # Utilization
 *
 * @code{cpp}
 *  #ifndef RODIN_USE_MPI
 *  // Code depending on MPI support
 *  #endif
 * @endcode
 */
#cmakedefine RODIN_USE_MPI

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with OpenMP support.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifndef RODIN_USE_OPENMP
 * // Code depending on OpenMP support
 * #endif
 * @endcode
 */
#cmakedefine RODIN_USE_OPENMP

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with SuiteSparse support.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifndef RODIN_USE_UMFPACK
 * // Code depending on UMFPACK
 * #endif
 * @endcode
 */
#cmakedefine RODIN_USE_UMFPACK

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with SuiteSparse support.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifndef RODIN_USE_SPQR
 * // Code depending on SPQR
 * #endif
 * @endcode
 */
#cmakedefine RODIN_USE_SPQR

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with SuiteSparse support.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifndef RODIN_USE_CHOLMOD
 * // Code depending on CHOLMOD
 * #endif
 * @endcode
 */
#cmakedefine RODIN_USE_CHOLMOD

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin warnings are silenced.
 */
#cmakedefine RODIN_SILENCE_WARNINGS

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin exceptions are silenced.
 *
 * If defined, this directive will prevent Rodin from outputting the error
 * messages. It does not prevent the exception from being thrown.
 */
#cmakedefine RODIN_SILENCE_EXCEPTIONS

/**
 * @ingroup RodinDirectives
 * @brief Indicates the Rodin resources directory.
 *
 * # Utilization
 *
 * @code{cpp}
 * std::cout << RODIN_RESOURCES_DIR << std::endl;
 * @endcode
 */
#cmakedefine RODIN_RESOURCES_DIR "@RODIN_RESOURCES_DIR@"

/**
 * @ingroup RodinDirectives
 * @brief Indicates the Rodin third-party source directory.
 *
 * # Utilization
 *
 * @code{cpp}
 * std::cout << RODIN_THIRD_PARTY_DIR << std::endl;
 * @endcode
 */
#cmakedefine RODIN_THIRD_PARTY_DIR "@RODIN_THIRD_PARTY_DIR@"

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with thread safety enabled.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifdef RODIN_THREAD_SAFE
 *   // Code that requires thread safety features.
 * #endif
 * @endcode
 */
#cmakedefine RODIN_THREAD_SAFE

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin supports multithreading.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifdef RODIN_MULTITHREADED
 *   // Code that leverages multithreading capabilities.
 * #endif
 * @endcode
 */
#cmakedefine RODIN_MULTITHREADED

/**
 * @ingroup RodinDirectives
 * @brief Indicates if Rodin is built with Apple Accelerate support.
 *
 * # Utilization
 *
 * @code{cpp}
 * #ifdef RODIN_USE_APPLE_ACCELERATE
 *   // Code that uses the Apple Accelerate framework for optimized computations.
 * #endif
 * @endcode
 */
#cmakedefine RODIN_USE_APPLE_ACCELERATE

/**
 * @ingroup RodinDirectives
 * @brief Indicates the maximal space dimension.
 */
#define RODIN_MAXIMAL_SPACE_DIMENSION 3

/**
 * @ingroup RodinDirectives
 * @brief Indicates the default polytope attribute.
 */
#define RODIN_DEFAULT_POLYTOPE_ATTRIBUTE 1

/**
 * @ingroup RodinDirectives
 * @brief Indicates the default gridfunction save precision.
 */
#define RODIN_DEFAULT_GRIDFUNCTION_SAVE_PRECISION 8

/**
 * @brief Represents the constant used for fuzzy comparison.
 */
#define RODIN_FUZZY_CONSTANT 1e-5

#endif
